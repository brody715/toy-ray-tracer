/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type AcceleratorConfig =
  | {
      kind: "nop";
      [k: string]: unknown | undefined;
    }
  | {
      kind: "bvh";
      [k: string]: unknown | undefined;
    };
export type JVec3F = [number, number, number];
export type PrimitiveConfig =
  | {
      area_light?: AreaLightConfig | null;
      flip_face?: boolean;
      kind: "geom";
      material: MaterialConfig;
      shape: ShapeConfig;
      transforms?: TransformConfig[];
      [k: string]: unknown | undefined;
    }
  | {
      children: PrimitiveConfig[];
      kind: "container";
      transforms?: TransformConfig[];
      [k: string]: unknown | undefined;
    };
export type MaterialConfig =
  | {
      albedo: AorBFor_TextureConfigAnd_JVec3F;
      kind: "lambertian";
      [k: string]: unknown | undefined;
    }
  | {
      albedo: AorBFor_TextureConfigAnd_JVec3F;
      fuzz: number;
      kind: "metal";
      [k: string]: unknown | undefined;
    }
  | {
      ir: number;
      kind: "dielectric";
      [k: string]: unknown | undefined;
    }
  | {
      emit: AorBFor_TextureConfigAnd_JVec3F;
      kind: "diffuse_light";
      [k: string]: unknown | undefined;
    }
  | {
      albedo: AorBFor_TextureConfigAnd_JVec3F;
      kind: "isotropic";
      [k: string]: unknown | undefined;
    };
export type AorBFor_TextureConfigAnd_JVec3F = TextureConfig | JVec3F;
export type TextureConfig =
  | {
      kind: "constant_texture";
      value: JVec3F;
      [k: string]: unknown | undefined;
    }
  | {
      kind: "image_texture";
      uri: string;
      [k: string]: unknown | undefined;
    }
  | {
      even: TextureConfig;
      kind: "checker_texture";
      odd: TextureConfig;
      [k: string]: unknown | undefined;
    };
export type ShapeConfig =
  | {
      center: JVec3F;
      kind: "sphere";
      radius: number;
      [k: string]: unknown | undefined;
    }
  | {
      kind: "cube";
      p_max: JVec3F;
      p_min: JVec3F;
      [k: string]: unknown | undefined;
    }
  | {
      kind: "rect";
      v0: JVec3F;
      v1: JVec3F;
      [k: string]: unknown | undefined;
    }
  | {
      center: JVec3F;
      kind: "disk";
      normal: JVec3F;
      radius: number;
      [k: string]: unknown | undefined;
    }
  | {
      center0: JVec3F;
      center1: JVec3F;
      kind: "cylinder";
      radius: number;
      [k: string]: unknown | undefined;
    }
  | {
      kind: "pyramid";
      v0: JVec3F;
      v1: JVec3F;
      v2: JVec3F;
      v3: JVec3F;
      [k: string]: unknown | undefined;
    }
  | {
      indices: number[];
      kind: "triangle_mesh";
      normals?: JVec3F[];
      positions: JVec3F[];
      uvs?: JVec2F[];
      [k: string]: unknown | undefined;
    }
  | {
      kind: "uri";
      uri: string;
      [k: string]: unknown | undefined;
    };
export type JVec2F = [number, number];
export type TransformConfig =
  | {
      kind: "translate";
      offset: JVec3F;
      [k: string]: unknown | undefined;
    }
  | {
      angle: number;
      axis: JVec3F;
      kind: "rotate";
      [k: string]: unknown | undefined;
    }
  | {
      kind: "scale";
      scale: JVec3F;
      [k: string]: unknown | undefined;
    };

export interface ProjectConfig {
  accelerator?: AcceleratorConfig;
  name: string;
  scene: SceneConfig;
  settings: Settings;
  [k: string]: unknown | undefined;
}
export interface SceneConfig {
  camera: CameraConfig;
  environments: EnvironmentConfig[];
  world: PrimitiveConfig[];
  [k: string]: unknown | undefined;
}
export interface CameraConfig {
  aperture?: number;
  aspect?: number;
  focus_dist?: number;
  look_at?: JVec3F;
  look_from?: JVec3F;
  time0?: number;
  time1?: number;
  vertical_fov?: number;
  view_up?: JVec3F;
  [k: string]: unknown | undefined;
}
export interface EnvironmentConfig {
  l: JVec3F;
  [k: string]: unknown | undefined;
}
export interface AreaLightConfig {
  [k: string]: unknown | undefined;
}
export interface Settings {
  height: number;
  max_depth: number;
  nsamples: number;
  output_dir: string;
  weight?: number;
  width: number;
  [k: string]: unknown | undefined;
}
